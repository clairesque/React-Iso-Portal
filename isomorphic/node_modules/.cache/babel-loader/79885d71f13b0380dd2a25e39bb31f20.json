{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cleri\\\\Downloads\\\\isomorphic\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cleri\\\\Downloads\\\\isomorphic\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cleri\\\\Downloads\\\\isomorphic\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cleri\\\\Downloads\\\\isomorphic\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cleri\\\\Downloads\\\\isomorphic\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\cleri\\\\Downloads\\\\isomorphic\\\\isomorphic\\\\src\\\\customApp\\\\containers\\\\FormValidation.js\";\nimport React, { Component } from 'react';\nimport { Input } from 'antd';\nimport Form from '../../../src/components/uielements/form';\nimport Checkbox from '../../../src/components/uielements/checkbox';\nimport Button from '../../../src/components/uielements/button';\nimport Notification from '../../../src/components/notification';\nvar FormItem = Form.Item;\n\nvar FormWIthSubmissionButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormWIthSubmissionButton, _Component);\n\n  function FormWIthSubmissionButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormWIthSubmissionButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormWIthSubmissionButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.onChangeAlphaNumericInput = function (rule, value, callback) {\n      var form = _this.props.form;\n      var regex = /^[0-9A-Z]+$/; //this will admit letters, numbers and dashes\n\n      if (value.match(regex) || value === \"\") {\n        _this.setState({\n          inputValue: value\n        });\n      } else {\n        callback('Should be combination of capital numbers and letters.');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FormWIthSubmissionButton, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 6\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 14\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 14,\n            offset: 6\n          }\n        }\n      };\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Your booking code\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          validator: this.onChangeAlphaNumericInput\n        }]\n      })(React.createElement(Input, {\n        name: \"email\",\n        id: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return FormWIthSubmissionButton;\n}(Component);\n\nvar WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\nexport default WrappedFormWIthSubmissionButton;","map":{"version":3,"sources":["C:\\Users\\cleri\\Downloads\\isomorphic\\isomorphic\\src\\customApp\\containers\\FormValidation.js"],"names":["React","Component","Input","Form","Checkbox","Button","Notification","FormItem","Item","FormWIthSubmissionButton","state","confirmDirty","onChangeAlphaNumericInput","rule","value","callback","form","props","regex","match","setState","inputValue","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","handleSubmit","rules","validator","WrappedFormWIthSubmissionButton","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,IAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAtB;;IAEMC,wB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;;UAKRC,yB,GAA4B,UAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACrD,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWD,IAAxB;AACA,UAAME,KAAK,GAAG,aAAd,CAFqD,CAExB;;AAC7B,UAAIJ,KAAK,CAACK,KAAN,CAAYD,KAAZ,KAAsBJ,KAAK,KAAK,EAApC,EAAwC;AACtC,cAAKM,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEP;AAAd,SAAd;AACD,OAFD,MAGK;AACDC,QAAAA,QAAQ,CAAC,uDAAD,CAAR;AACH;AACF,K;;;;;;;6BACQ;AAAA,UACCO,iBADD,GACuB,KAAKL,KAAL,CAAWD,IADlC,CACCM,iBADD;AAGP,UAAMC,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADI;AAERC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFI,SADW;AAKrBE,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADM;AAEVC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFM;AALS,OAAvB;AAUA,UAAMG,kBAAkB,GAAG;AACzBD,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AACFC,YAAAA,IAAI,EAAE,EADJ;AAEFI,YAAAA,MAAM,EAAE;AAFN,WADM;AAKVH,UAAAA,EAAE,EAAE;AACFD,YAAAA,IAAI,EAAE,EADJ;AAEFI,YAAAA,MAAM,EAAE;AAFN;AALM;AADa,OAA3B;AAYA,aACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,oBAAcR,cAAd;AAA8B,QAAA,KAAK,EAAC,mBAApC;AAAwD,QAAA,WAAW,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,iBAAiB,CAAC,OAAD,EAAU;AAC1BU,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,SAAS,EAAE,KAAKrB;AADlB,SADK;AADmB,OAAV,CAAjB,CAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADH,CADF,EAWE,oBAAC,QAAD,oBAAciB,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAXF,CADF;AAmBD;;;;EA5DoC5B,S;;AA+DvC,IAAMiC,+BAA+B,GAAG/B,IAAI,CAACgC,MAAL,GAAc1B,wBAAd,CAAxC;AACA,eAAeyB,+BAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport Form from '../../../src/components/uielements/form';\r\nimport Checkbox from '../../../src/components/uielements/checkbox';\r\nimport Button from '../../../src/components/uielements/button';\r\nimport Notification from '../../../src/components/notification';\r\nconst FormItem = Form.Item;\r\n\r\nclass FormWIthSubmissionButton extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n  };\r\n\r\n\r\n  onChangeAlphaNumericInput = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    const regex = /^[0-9A-Z]+$/; //this will admit letters, numbers and dashes\r\n    if (value.match(regex) || value === \"\") {\r\n      this.setState({ inputValue: value });\r\n    }\r\n    else {\r\n        callback('Should be combination of capital numbers and letters.');\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 14 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 14,\r\n          offset: 6,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormItem {...formItemLayout} label=\"Your booking code\" hasFeedback>\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                validator: this.onChangeAlphaNumericInput,\r\n              }\r\n            ],\r\n          })(<Input name=\"email\" id=\"email\" />)}\r\n        </FormItem>\r\n        \r\n        <FormItem {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\r\nexport default WrappedFormWIthSubmissionButton;\r\n"]},"metadata":{},"sourceType":"module"}